name: CI # Continuous Integration

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install cargo-semver-checks
        uses: jaxxstorm/action-install-gh-release@v1.10.0
        with:
          repo: obi1kenobi/cargo-semver-checks
          tag: v0.20.0
          cache: enable
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y libssl-dev
      - name: Start containers
        run: docker compose up -d --wait
        working-directory: ./tests
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --all-features --workspace

  check:
    name: Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: aarch64-pc-windows-msvc
            os: windows-2022
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-22.04
          - target: x86_64-apple-darwin
            os: macos-12
          - target: x86_64-pc-windows-msvc
            os: windows-2022
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install OpenSSL
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt update && sudo apt install -y libssl-dev
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cargo check
        run: cargo check --all-features --workspace

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Check formatting
        run: cargo fmt --all --check

  clippy:
    name: Clippy
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Clippy check
        run: cargo clippy --all-targets --all-features --workspace -- -D warnings

  docs:
    name: Docs
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --document-private-items --all-features --workspace --examples
